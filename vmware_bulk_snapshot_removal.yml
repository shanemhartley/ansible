---
- name: Remove snapshots in vcenter older than 30 days
  hosts: localhost
  become: true
  gather_facts: true
  vars_files:
    - vault.yml
  tasks:  
    - name: Fail condition to check if threshold days is less than minimum of 30 days 
      assert:
        that: 
          - days_threshold | int >= 30
        fail_msg: "{{days_threshold}} days of snapshots is less than the minimum snapshot retention period of 30 days"
        success_msg: "{{days_threshold}} days of snapshots is greater or equal to 30 days - proceeding with playbook"
    - name: Lookup timestamp string for threshold date ({{days_threshold}} days ago)
      set_fact:
        threshold_date_raw: "{{ lookup('pipe', 'date -u -d \"{{ days_threshold }} days ago\" +%Y-%m-%dT%H:%M:%SZ') }}" # Setting a date threshold which is how far back to remove snapshots
    - name: Get info for all hosts - 'all' host group
      vmware.vmware.guest_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        guest_name: "{{ item }}"
      loop: "{{ groups['all'] }}"
      register: snapshots_info #  data structure is as follows 'snapshots_info' -> .results (list) -> .guests (list) -> .moid (key) and .snapshots (list) - these are on the same level
    - name: Remove old snapshots older than {{days_threshold}} days
      vmware.vmware.vm_snapshot:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        snapshot_id: "{{ item.id }}" # Iterating on each snapshots ID
        moid: >- # Iterating on the moid key in the 'guests' list, defined = not null
          {{
            snapshots_info.results
            | map(attribute='guests')
            | flatten
            | selectattr('snapshots', 'defined')
            | selectattr('snapshots', 'contains', item)
            | map(attribute='moid')
            | first
          }}
        state: "absent"
      loop: > # Iterating on the 'snapshots' list, , defined = not null
        {{
          snapshots_info.results
          | map(attribute='guests')
          | flatten
          | map(attribute='snapshots')
          | flatten
          | selectattr('creation_time', 'defined')
        }}
      when: (item.creation_time | to_datetime('%Y-%m-%dT%H:%M:%S.%f%z')).timestamp() < (threshold_date_raw | to_datetime('%Y-%m-%dT%H:%M:%SZ')).timestamp() # Logic to validate snapshot is older than threshold date
